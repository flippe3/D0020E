import development.Constants as const
import json, jwt

class Token:

    def generateJwt(self, payload, private_key):
        return jwt.encode(payload, private_key, algorithm="RS256")

    def decodeJwt(self, token, public_key):
        return jwt.decode(token, public_key, algorithms=["RS256"])

    class Poa:
        def __init__(self, agent_mac, agent_name, agent_public_key,
                     principal_name, principal_public_key, validity, id, message):
            self.payload = {
                "Agent_MAC_Address": agent_mac,
                "Agent_Name": agent_name,
                "Agent_Public_Key": agent_public_key,
                "Principal_Name": principal_name,
                "Prinicpal_Public_Key": principal_public_key,
                "Valid_from": validity[0],
                "Valid_to": validity[1],
                "id": id,
                "Message": message
            }






#generated by principal
t = Token()
poa = t.Poa(const.agent_mac_address, const.agent_name, const.agent_public_key,
               const.principal_name, const.principal_public_key, const.valid_period, const.id, const.message)
JWT = t.generateJwt(poa.payload, const.principal_private_key)
print(JWT)

#decoded by agent
t2 = Token()
decoded_JWT = t2.decodeJwt(JWT, const.principal_public_key)
print(decoded_JWT)

#generate invalid from consts
invalid = t.generateJwt(const.invalid_poa, const.principal_private_key)
print(t.decodeJwt(invalid, const.principal_public_key))